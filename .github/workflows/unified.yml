name: Unified Multi-Account Workflow (v3.2 Final - Safe Push + Delay + Full Features)

on:
  workflow_dispatch:
    inputs:
      total_commits:
        description: "Jumlah total commit per akun"
        required: true
        default: "1650"
      total_days:
        description: "Jumlah hari pembagian commit"
        required: true
        default: "365"
      total_prs:
        description: "Jumlah Pull Request per akun"
        required: true
        default: "1"
      total_issues:
        description: "Jumlah Issue per akun"
        required: true
        default: "3"
      repo_count:
        description: "Jumlah repository tambahan per akun"
        required: true
        default: "1"
      target_repo:
        description: "Repository utama tempat aktivitas"
        required: true
        default: "countback/HAPUS"

jobs:
  unified:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        include:
          - account: countback
            email: 24824302+countback@users.noreply.github.com
            token_secret: PAT1
          - account: miyake0519
            email: 31173253+miyake0519@users.noreply.github.com
            token_secret: PAT2
          - account: HanletVargas
            email: 33170524+HanletVargas@users.noreply.github.com
            token_secret: PAT3
          - account: atytmr
            email: 56760228+atytmr@users.noreply.github.com
            token_secret: PAT4
          - account: enzo071313
            email: 60238329+enzo071313@users.noreply.github.com
            token_secret: PAT5
          - account: pabloprane1997
            email: 72478529+pabloprane1997@users.noreply.github.com
            token_secret: PAT6
          - account: nicholasgama
            email: 62399232+nicholasgama@users.noreply.github.com
            token_secret: PAT7
          - account: ViniMartinsz
            email: 107067923+ViniMartinsz@users.noreply.github.com
            token_secret: PAT8
          - account: heyceo1
            email: 130244920+heyceo1@users.noreply.github.com
            token_secret: PAT9

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Delay before start
        run: |
          DELAY=$((10 + RANDOM % 20))
          echo "üïí Menunggu $DELAY detik sebelum memulai akun ${{ matrix.account }}..."
          sleep $DELAY

      - name: Setup Git Identity
        run: |
          git config --global user.name "${{ matrix.account }}"
          git config --global user.email "${{ matrix.email }}"
          echo "‚úÖ Git identity diset untuk ${{ matrix.account }}"

      - name: Clone Target Repository
        env:
          GH_TOKEN: ${{ secrets[matrix.token_secret] }}
          TARGET_REPO: ${{ github.event.inputs.target_repo }}
        run: |
          echo "üîÑ Cloning repo target: $TARGET_REPO"
          git clone https://x-access-token:${GH_TOKEN}@github.com/$TARGET_REPO repo
          cd repo
          git config user.name "${{ matrix.account }}"
          git config user.email "${{ matrix.email }}"
          echo "‚úÖ Repo berhasil dikloning untuk ${{ matrix.account }}"

      - name: Generate Commits (langsung ke main, dengan delay & rebase aman)
        env:
          TOTAL_COMMITS: ${{ github.event.inputs.total_commits }}
          TOTAL_DAYS: ${{ github.event.inputs.total_days }}
          GH_TOKEN: ${{ secrets[matrix.token_secret] }}
          TARGET_REPO: ${{ github.event.inputs.target_repo }}
        run: |
          cd repo
          mkdir -p logs
          COMMITS_PER_DAY=$((TOTAL_COMMITS / TOTAL_DAYS))
          START_DATE=$(date -d "$TOTAL_DAYS days ago" +%Y-%m-%d)
          echo "üìä Membuat $TOTAL_COMMITS commit selama $TOTAL_DAYS hari..."

          for ((day=0; day<TOTAL_DAYS; day++)); do
            DATE_STR=$(date -d "$START_DATE +$day days" +%Y-%m-%d)
            for ((i=1; i<=COMMITS_PER_DAY; i++)); do
              HOUR=$((RANDOM % 24))
              MIN=$((RANDOM % 60))
              echo "Commit $i oleh ${{ matrix.account }} pada $DATE_STR" >> logs/${{ matrix.account }}_$day.txt
              git add logs/${{ matrix.account }}_$day.txt
              GIT_COMMITTER_DATE="$DATE_STR $HOUR:$MIN:00" \
              GIT_AUTHOR_DATE="$DATE_STR $HOUR:$MIN:00" \
              git commit -m "Auto commit $i by ${{ matrix.account }}" || true
            done
          done

          DELAY=$((10 + RANDOM % 15))
          echo "‚è≥ Menunggu $DELAY detik sebelum push agar tidak bentrok..."
          sleep $DELAY

          echo "üöÄ Push langsung ke main..."
          for attempt in {1..3}; do
            git pull --rebase https://x-access-token:${GH_TOKEN}@github.com/$TARGET_REPO main || true
            git push https://x-access-token:${GH_TOKEN}@github.com/$TARGET_REPO HEAD:main && break || sleep 3
          done
          echo "‚úÖ Semua commit masuk langsung ke main untuk ${{ matrix.account }}!"

      - name: Create Pull Requests (banyak PR tanpa auto merge)
        env:
          GH_TOKEN: ${{ secrets[matrix.token_secret] }}
          TARGET_REPO: ${{ github.event.inputs.target_repo }}
          TOTAL_PRS: ${{ github.event.inputs.total_prs }}
        run: |
          cd repo
          echo "üîÄ Membuat $TOTAL_PRS Pull Request..."
          for i in $(seq 1 $TOTAL_PRS); do
            branch="auto-${{ matrix.account }}-pr-$i-$(date +%s)"
            echo "Pull request #$i by ${{ matrix.account }}" > pr_${{ matrix.account }}_$i.txt
            git checkout -B $branch
            git add pr_${{ matrix.account }}_$i.txt
            git commit -m "PR otomatis #$i oleh ${{ matrix.account }}" || true
            git push -f https://x-access-token:${GH_TOKEN}@github.com/$TARGET_REPO HEAD:$branch
            gh pr create \
              --title "PR #$i dari ${{ matrix.account }}" \
              --body "PR otomatis #$i dari ${{ matrix.account }}" \
              --base main --head $branch \
              --repo $TARGET_REPO || true
            sleep 1
          done

      - name: Create Issues
        env:
          GH_TOKEN: ${{ secrets[matrix.token_secret] }}
          TARGET_REPO: ${{ github.event.inputs.target_repo }}
          TOTAL_ISSUES: ${{ github.event.inputs.total_issues }}
        run: |
          echo "üìã Membuat $TOTAL_ISSUES issues..."
          for i in $(seq 1 $TOTAL_ISSUES); do
            gh issue create \
              --title "Issue #$i dari ${{ matrix.account }}" \
              --body "Auto-generated issue $i oleh akun ${{ matrix.account }}" \
              --repo $TARGET_REPO || true
            sleep 1
          done

      - name: Create Additional Repositories
        env:
          PAT_TOKEN: ${{ secrets[matrix.token_secret] }}
        run: |
          set -e
          WORDS=("quantum" "nova" "lumen" "matrix" "orbit" "vector" "sigma" "neon" "fusion" "zenith")
          SUFFIX=("project" "service" "system" "app" "engine" "hub" "core" "cloud" "framework")
          LANGS=("Python" "C++" "Go" "Swift" "Java" "JavaScript" "Ruby")
          EXT=("py" "cpp" "go" "swift" "java" "js" "rb")
          CONTENTS=(
            "print('Hello from Python!')"
            "#include <iostream>\nint main(){std::cout << \"Hello from C++!\"; return 0;}"
            "package main\nimport \"fmt\"\nfunc main(){fmt.Println(\"Hello from Go!\")}"
            "print(\"Hello from Swift!\")"
            "public class Main { public static void main(String[] args){ System.out.println(\"Hello from Java!\"); } }"
            "console.log('Hello from JavaScript!');"
            "puts 'Hello from Ruby!'"
          )

          COUNT=${{ github.event.inputs.repo_count }}
          git config --global user.name "${{ matrix.account }}"
          git config --global user.email "${{ matrix.email }}"

          echo "=== [${{ matrix.account }}] Membuat $COUNT repositori ==="
          for i in $(seq 1 $COUNT); do
            NAME="${WORDS[$RANDOM % ${#WORDS[@]}]}-${SUFFIX[$RANDOM % ${#SUFFIX[@]}]}"
            LANG_INDEX=$((RANDOM % ${#LANGS[@]}))
            FILE_EXT=${EXT[$LANG_INDEX]}
            FILE_CONTENT=${CONTENTS[$LANG_INDEX]}
            FILE_NAME="main.${FILE_EXT}"

            echo "üì¶ [$i/$COUNT] Membuat repo: $NAME (${LANGS[$LANG_INDEX]})"
            response=$(curl -s -H "Authorization: token $PAT_TOKEN" \
              -d "{\"name\":\"$NAME\",\"auto_init\":true}" \
              https://api.github.com/user/repos)

            if echo "$response" | grep -q '"full_name"'; then
              echo "‚úÖ Repository dibuat: $NAME"
              git clone https://x-access-token:${PAT_TOKEN}@github.com/${{ matrix.account }}/$NAME.git
              cd $NAME
              echo "$FILE_CONTENT" > $FILE_NAME
              git add .
              git commit -m "Initial commit (${LANGS[$LANG_INDEX]})"
              git push origin main --force
              cd ..
              rm -rf $NAME
            else
              echo "‚ö†Ô∏è Gagal membuat repository $NAME"
            fi
            sleep 2
          done
          echo "‚úÖ Semua repository berhasil dibuat!"
